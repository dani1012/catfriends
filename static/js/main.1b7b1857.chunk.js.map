{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchfield","initialStateRobots","robots","isPending","error","Card","name","email","id","className","alt","src","CardList","map","user","i","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","errorInfo","this","setState","React","Component","CounterButton","updateCount","count","nextProps","nextState","onClick","Header","App","onRequestRobots","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobotsReducer","requestRobotsReducer","dispatch","event","payload","target","value","fetch","then","response","json","users","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b7b1857.chunk.js","sourcesContent":["\n\nconst initialStateSearch = {\n\tsearchfield: ''\n}\n\n\n\nexport const searchRobotsReducer = (state = initialStateSearch, action) => {\n\n\tswitch(action.type) {\n\n\t\tcase 'CHANGE_SEARCH_FIELD':\n\t\t  \treturn Object.assign({}, state, {searchfield: action.payload})\n\n\t\tdefault:\n\t\t \treturn state ;\n\t}\n\n}\n\n\n\nconst initialStateRobots = {\n\trobots: [],\n\tisPending: false,\n\terror: ''\n}\n\n\n\nexport const requestRobotsReducer = (state = initialStateRobots, action) => {\n\t\n\n\tswitch(action.type) {\n\n\t\tcase 'REQUEST_ROBOTS_PENDING':\n\t\t  \treturn Object.assign({}, state, { isPending: true })\n\t\tcase 'REQUEST_ROBOTS_SUCCESS':\n\t\t  \treturn Object.assign({}, state, { robots: action.payload, isPending: false })\n\t\tcase 'REQUEST_ROBOTS_FAILED':\n\t\t  \treturn Object.assign({}, state, { error: action.payload, isPending: false})\n\t\tdefault:\n\t\t \treturn state ;\n\t}\n\n}","import React from 'react';\n\nconst Card = ({name,email,id})=> {\n\n\treturn (\n\n    <div className = 'bg-light-green br2 dib pa3 ma2 grow bw2 shadow-5'>\n\t     <img alt = 'robots' src = {`https://robohash.org/set_set4/${id}/?size=200x200`}/>\n\t     <div>\n\t     \t<h2>{name}</h2>\n\t     \t<p>{email}</p>\n\t     </div>\n    </div>\t\n\n\t\t);\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\n\nconst CardList = ({robots})=> {\n\treturn  (\n\n     <div> \n\n     {\n\t    robots.map((user,i)=> {\n\t\t  return (\n\t\t\t <Card \n\t\t\t\tkey ={robots[i].id} \n\t\t\t\tid = {robots[i].id} \n\t\t\t\tname = {robots[i].name} \n\t\t\t\temail = {robots[i].email}\n\t\t\t/>\n\t\t   )\n\t\t})\n    }\n\n     </div>\n\n\t\t)\n   \n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange})=> {\n\n\treturn (\n\t <div className = 'pa3'>\n\t   <input \n\t       aria-label = 'Search cats'\n\t       className = 'pa3 ba b--green bg-lightest-blue'\n\t\t   type = 'search' \n\t\t   placeholder = 'search cats by name'\n\t\t   onChange = {searchChange}\n\t   />\n\t </div>\n\t)\n}\n\n\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n\n\treturn (\n\t  <div style = {{overflowY: 'scroll', border: '1px solid black', height : '500px'}}>\n\t    {props.children}\n\t  </div>\n\n\t)\n}\n\n\nexport default Scroll;","import React from 'react';\n\n\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      hasError: false \n    }\n  }\n\n \n\n  componentDidCatch(error, errorInfo) {  \n    this.setState({hasError: true})\n  }\n\n\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Oops,something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\n\nclass CounterButton extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcount: 0\n\t\t}\n\t}\n\n    shouldComponentUpdate(nextProps, nextState) {\n    \tif(this.state.count !== nextState.count) {\n    \t   return true\n    \t}\n    \treturn false\n    }\n\n    updateCount = () => {\n    \tthis.setState(state => {\n    \t\treturn {count: state.count +1}\n        })\n    }\n\n\n\trender() {\n\t\treturn (\n\t\t\t<button onClick = {this.updateCount}>\n\t\t\t\t\tCount:{this.state.count}\n\t\t\t</button>\n\t\t)\n\t}\n}\n\nexport default CounterButton;","import React, {Component} from 'react';\nimport CounterButton from './CounterButton';\n\n\nclass Header extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n    \treturn false \n    }\n\n\trender() {\n\t\treturn (\n\t\t   <div>\n\t\t\t\t<h1 className = 'f1'>CATFRIENDS</h1>\n\t            <CounterButton/>\n           </div>\n\t\t)\n\t}\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {setSearchField, requestRobots} from '../actions';\nimport './App.css';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Header from '../components/Header';\n\n\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchfield: state.searchRobotsReducer.searchfield,\n\t\trobots: state.requestRobotsReducer.robots,\n\t\tisPending: state.requestRobotsReducer.isPending,\n\t\terror: state.requestRobotsReducer.error\n\t}\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange : (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots:  () => dispatch(requestRobots())\n\t}\n}\n\n\nclass App extends Component {\n\n\ncomponentDidMount() {\n      this.props.onRequestRobots()\n}\n\n\n\trender () {\n\t\tconst {searchfield , onSearchChange, robots, isPending} = this.props;\n\t\tconst filteredRobots = robots.filter(robot=> \n\t\t      robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t)\n\n\t    return (\n\t\t  <div className = 'tc'>\n\t\t\t<Header/>\n\t\t\t<SearchBox searchChange = {onSearchChange}/>\n\t\t\t<Scroll>\n\t\t\t  { \n\t\t\t  isPending ?<h1>Loading...</h1> :\n\t\t\t\t  <ErrorBoundary>\n\t\t\t        <CardList robots = {filteredRobots} />\n\t\t\t      </ErrorBoundary>\n\t\t      }\n\t\t    </Scroll>\n\t      </div>\n\t    );\n    \n}\t\t\t \n \t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","export const setSearchField = (text) => {\n\n\treturn {\n      type: 'CHANGE_SEARCH_FIELD',\n      payload: text\n  }\n\n}\n\n\n\nexport const requestRobots = ()=> (dispatch) => {\n\t\n\n    dispatch({type: 'REQUEST_ROBOTS_PENDING'});\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => dispatch({ type:'REQUEST_ROBOTS_SUCCESS', payload: users }))\n\t\t.catch(error => dispatch( {type: 'REQUEST_ROBOTS_FAILED', payload: error }))\n\n \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport {Provider} from 'react-redux';\nimport {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport {searchRobotsReducer, requestRobotsReducer} from './reducers';\nimport './index.css';\nimport App from './containers/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({searchRobotsReducer, requestRobotsReducer});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware,logger));\n\n\n\nReactDOM.render(\n\t  <React.StrictMode>\n\t\t  <Provider store = {store}>\n\t\t  \t <App/>\n\t      </Provider>\n\t  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}